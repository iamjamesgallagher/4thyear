check for offical report ! ! ! ! - 

 Report is really dictated on the quality of the case study. 

 bring in differnt parts of the course when answering , exam questions ! ->Lookfor links between topics ! 

 topic 1. RegILATION , STANDARDS AND INSURANCE . 

 	2.	PRONLEMS WITH TESTING 

 	3.LOOKED AT ASPECIFIVC STANDRD + EQUIP,ETM UNDER CONTROL. 

 	4. fmeca - hazard analysis process ! THEN DO A CALULATION. + risk priority numers ! !

	5. FMECA risk = pronabilty + consrquence + detection !

 	6.lookat proability. 

 	fraca - hardware failures.    -> failure data inamerican miitray. USE THE HANDBOOK ! 

	 how do yo add up probabilities = failt trees . (base events + )   + include human errror ! 

 all this shit fits togther. Look at sample Exams ! !

look at risk exsposure and frequency. `   - when look  

human error. - look at preformance shaping factors. (alcohol and fatgiue. illness (flu)0 etc. . )

we cant do statistic probaility  testing of bugs on software , because we cant find all the bugs to start with . (dikstra)



This course is all about the quality of your arguement !.

remember to bring in technical facts, so you dont sound like a person off of the street. 

human + probabilites & software + probabilities.  

realy good people know it is a complex problem . and know that it is area of debate.

the mimimal cut set . . at the bottom of this is the hardware . (software is not included due to probability.)

fault tress ae link check lists without probabilities. (can use them for software.) 

software fault tree + software enhanced hazzops or sofware enhanced eca - FOR OPEN ASSESMENT. ! ! ! !

John musa.c

can also be related to high relablility systems . 




PRA .

k = probability of crash within a certain period of time  . 

expansion raio : how many lines of code you need of machine code to excute one line of a high level language.


high expansion ratio = higher level of a crash due to more line fo code. 

OR 


low level = no compiler errors .

high level =easier to understand . less programming logic errors. 



IN general -not lok for memory . looking for comments critisism . opinion.  With Evidence.

PART 2 - after break


archibald mcinley - automous robots 


Difference between sofware  hardare - key point in course.! ! ! 

configuration of software is often to blame. not a software bug. I>e cali - plane crash.

requiremets failure- software dona as it was told - but was set up wrong and there was and acident. 

corrct software , difficulty of testing,  

nicky louder - air plane crash. 


in requirememetns identify critical areas of system. (start up / and close down.)

utah - doctors on strike.
 
Central drug dispenser. server goes down. sledge hammers. west coast national printer. 




